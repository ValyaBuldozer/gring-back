"""Added local text.

Revision ID: f467ff99202e
Revises: 6afad1dfb13b
Create Date: 2020-03-09 19:18:09.502513

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql
from sqlalchemy.exc import IntegrityError

from migrations.util.localize_table import localize_one_id_table
from migrations.util.localize_table import localize_two_id_table
from models.City import City
from models.LocaleString import LocaleString
from models.Category import Category
from models.HistoricalPerson import HistoricalPerson

# revision identifiers, used by Alembic.
from models.Object import Object
from models.Place import Place
from models.Route import Route
from models.RoutePlaceInfo import RoutePlaceInfo

revision = 'f467ff99202e'
down_revision = '6afad1dfb13b'
branch_labels = None
depends_on = None


def upgrade():
    conn = op.get_bind()

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('locale_string',
                    sa.Column('string_id', sa.String(length=36), nullable=False),
                    sa.Column('string_locale', sa.Enum('ru', 'en', name='language'), nullable=False),
                    sa.Column('string_content', sa.Text(), nullable=False),
                    sa.PrimaryKeyConstraint('string_id', 'string_locale')
                    )
    op.add_column('category', sa.Column('category_name_id', sa.String(length=36), nullable=False))
    locale_update = localize_one_id_table(
        conn=conn,
        table=Category.__table__,
        id_col_name='category_id',
        text_col_names=['category_name']
    )
    op.bulk_insert(LocaleString.__table__, locale_update)
    op.create_foreign_key(None, 'category', 'locale_string', ['category_name_id'], ['string_id'])
    op.drop_column('category', 'category_name')

    op.add_column('object', sa.Column('object_description_id', sa.String(length=36), nullable=False))
    locale_update = localize_one_id_table(
        conn=conn,
        table=Object.__table__,
        id_col_name='object_id',
        text_col_names=['object_description']
    )
    op.bulk_insert(LocaleString.__table__, locale_update)
    op.create_foreign_key(None, 'object', 'locale_string', ['object_description_id'], ['string_id'])
    op.drop_column('object', 'object_description')

    op.add_column('place', sa.Column('place_address_id', sa.String(length=36), nullable=False))
    op.add_column('place', sa.Column('place_name_id', sa.String(length=36), nullable=False))
    locale_update = localize_one_id_table(
        conn=conn,
        table=Place.__table__,
        id_col_name='object_id',
        text_col_names=['place_address', 'place_name']
    )
    op.bulk_insert(LocaleString.__table__, locale_update)
    op.create_foreign_key(None, 'place', 'locale_string', ['place_name_id'], ['string_id'])
    op.create_foreign_key(None, 'place', 'locale_string', ['place_address_id'], ['string_id'])
    op.drop_column('place', 'place_name')
    op.drop_column('place', 'place_address')

    op.add_column('historical_person', sa.Column('person_name_id', sa.String(length=36), nullable=False))
    op.add_column('historical_person', sa.Column('person_second_name_id', sa.String(length=36), nullable=False))
    op.add_column('historical_person', sa.Column('person_patronymic_id', sa.String(length=36), nullable=True))
    locale_update = localize_one_id_table(
        conn=conn,
        table=HistoricalPerson.__table__,
        id_col_name='object_id',
        text_col_names=['person_name', 'person_second_name', 'person_patronymic']
    )
    op.bulk_insert(LocaleString.__table__, locale_update)
    op.create_foreign_key(None, 'historical_person', 'locale_string', ['person_name_id'], ['string_id'])
    op.create_foreign_key(None, 'historical_person', 'locale_string', ['person_second_name_id'], ['string_id'])
    op.create_foreign_key(None, 'historical_person', 'locale_string', ['person_patronymic_id'], ['string_id'])
    op.drop_column('historical_person', 'person_patronymic')
    op.drop_column('historical_person', 'person_name')
    op.drop_column('historical_person', 'person_second_name')

    op.add_column('city', sa.Column('city_description_id', sa.String(length=36), nullable=False))
    op.add_column('city', sa.Column('city_name_id', sa.String(length=36), nullable=False))
    locale_update = localize_one_id_table(
        conn=conn,
        table=City.__table__,
        id_col_name='city_id',
        text_col_names=['city_description', 'city_name']
    )
    op.bulk_insert(LocaleString.__table__, locale_update)
    op.create_foreign_key(None, 'city', 'locale_string', ['city_name_id'], ['string_id'])
    op.create_foreign_key(None, 'city', 'locale_string', ['city_description_id'], ['string_id'])
    op.drop_column('city', 'city_description')
    op.drop_column('city', 'city_name')

    op.add_column('route', sa.Column('route_description_id', sa.String(length=36), nullable=False))
    op.add_column('route', sa.Column('route_name_id', sa.String(length=36), nullable=False))
    locale_update = localize_one_id_table(
        conn=conn,
        table=Route.__table__,
        id_col_name='route_id',
        text_col_names=['route_name', 'route_description']
    )
    op.bulk_insert(LocaleString.__table__, locale_update)
    op.create_foreign_key(None, 'route', 'locale_string', ['route_description_id'], ['string_id'])
    op.create_foreign_key(None, 'route', 'locale_string', ['route_name_id'], ['string_id'])
    op.drop_column('route', 'route_name')
    op.drop_column('route', 'route_description')

    op.add_column('route_place_info', sa.Column('route_place_description_id', sa.String(length=36), nullable=True))
    locale_update = localize_two_id_table(
        conn=conn,
        table=RoutePlaceInfo.__table__,
        col_id_names=['place_id', 'route_id'],
        text_col_names=['route_place_description']
    )
    op.bulk_insert(LocaleString.__table__, locale_update)
    op.create_foreign_key(None, 'route_place_info', 'locale_string', ['route_place_description_id'], ['string_id'])
    op.drop_column('route_place_info', 'route_place_description')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('route_place_info', sa.Column('route_place_description', mysql.TEXT(), nullable=True))
    op.drop_constraint(None, 'route_place_info', type_='foreignkey')
    op.drop_column('route_place_info', 'route_place_description_id')
    op.add_column('route', sa.Column('route_description', mysql.TEXT(), nullable=False))
    op.add_column('route', sa.Column('route_name', mysql.VARCHAR(length=100), nullable=False))
    op.drop_constraint(None, 'route', type_='foreignkey')
    op.drop_constraint(None, 'route', type_='foreignkey')
    op.drop_column('route', 'route_name_id')
    op.drop_column('route', 'route_description_id')
    op.add_column('place', sa.Column('place_address', mysql.VARCHAR(length=200), nullable=False))
    op.add_column('place', sa.Column('place_name', mysql.VARCHAR(length=100), nullable=False))
    op.drop_constraint(None, 'place', type_='foreignkey')
    op.drop_constraint(None, 'place', type_='foreignkey')
    op.drop_column('place', 'place_name_id')
    op.drop_column('place', 'address_id')
    op.add_column('object', sa.Column('object_description', mysql.TEXT(), nullable=True))
    op.drop_constraint(None, 'object', type_='foreignkey')
    op.drop_column('object', 'object_description_id')
    op.add_column('historical_person', sa.Column('person_second_name', mysql.VARCHAR(length=30), nullable=False))
    op.add_column('historical_person', sa.Column('person_name', mysql.VARCHAR(length=20), nullable=False))
    op.add_column('historical_person', sa.Column('person_patronymic', mysql.VARCHAR(length=30), nullable=False))
    op.drop_constraint(None, 'historical_person', type_='foreignkey')
    op.drop_constraint(None, 'historical_person', type_='foreignkey')
    op.drop_constraint(None, 'historical_person', type_='foreignkey')
    op.drop_column('historical_person', 'person_second_name_id')
    op.drop_column('historical_person', 'person_patronymic_id')
    op.drop_column('historical_person', 'person_name_id')
    op.add_column('city', sa.Column('city_name', mysql.VARCHAR(length=30), nullable=False))
    op.add_column('city', sa.Column('city_description', mysql.TEXT(), nullable=False))
    op.drop_constraint(None, 'city', type_='foreignkey')
    op.drop_constraint(None, 'city', type_='foreignkey')
    op.drop_column('city', 'city_name_id')
    op.drop_column('city', 'city_description_id')
    op.add_column('category', sa.Column('category_name', mysql.VARCHAR(length=30), nullable=False))
    op.drop_constraint(None, 'category', type_='foreignkey')
    op.drop_column('category', 'category_name_id')
    op.drop_table('locale_string')
    # ### end Alembic commands ###
